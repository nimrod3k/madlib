# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'UI\FileTypeSelector.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_FileTypeSelector(object):
    def setupUi(self, FileTypeSelector):
        FileTypeSelector.setObjectName("FileTypeSelector")
        FileTypeSelector.resize(400, 211)
        self.buttonBox = QtWidgets.QDialogButtonBox(FileTypeSelector)
        self.buttonBox.setGeometry(QtCore.QRect(30, 160, 341, 32))
        self.buttonBox.setOrientation(QtCore.Qt.Horizontal)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.Cancel|QtWidgets.QDialogButtonBox.Ok)
        self.buttonBox.setCenterButtons(False)
        self.buttonBox.setObjectName("buttonBox")
        self.rb_source = QtWidgets.QRadioButton(FileTypeSelector)
        self.rb_source.setGeometry(QtCore.QRect(30, 20, 261, 17))
        self.rb_source.setChecked(True)
        self.rb_source.setObjectName("rb_source")
        self.radioButton_2 = QtWidgets.QRadioButton(FileTypeSelector)
        self.radioButton_2.setGeometry(QtCore.QRect(30, 60, 211, 17))
        self.radioButton_2.setObjectName("radioButton_2")
        self.radioButton_3 = QtWidgets.QRadioButton(FileTypeSelector)
        self.radioButton_3.setGeometry(QtCore.QRect(30, 100, 191, 17))
        self.radioButton_3.setObjectName("radioButton_3")

        self.retranslateUi(FileTypeSelector)
        self.buttonBox.rejected.connect(FileTypeSelector.reject)
        self.buttonBox.accepted.connect(FileTypeSelector.accept)
        QtCore.QMetaObject.connectSlotsByName(FileTypeSelector)

    def retranslateUi(self, FileTypeSelector):
        _translate = QtCore.QCoreApplication.translate
        FileTypeSelector.setWindowTitle(_translate("FileTypeSelector", "Select File Type"))
        self.rb_source.setText(_translate("FileTypeSelector", "Source File to Madlibify (txt)"))
        self.radioButton_2.setText(_translate("FileTypeSelector", "Madlib File (.madlib)"))
        self.radioButton_3.setText(_translate("FileTypeSelector", "Madlib collection (json)"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    FileTypeSelector = QtWidgets.QDialog()
    ui = Ui_FileTypeSelector()
    ui.setupUi(FileTypeSelector)
    FileTypeSelector.show()
    sys.exit(app.exec_())
